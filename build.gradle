// gradle task and plugin configuration
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.jfrog.bintray'

// global settings
group 'io.cloudwall'
version '1.0.0'
sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9
repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.google.code.findbugs:jsr305:3.0.2',
            'com.google.guava:guava:25.1-jre',
            'com.sun.activation:javax.activation:1.2.0',
            'commons-io:commons-io:2.6',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.11.0',
            'org.fusesource.jansi:jansi:1.17.1',
            'org.javafp:parsecj:0.6',
            'org.jooq:jool:0.9.14'
    testCompile 'junit:junit:4.12',
                'org.hamcrest:hamcrest-library:1.4-atlassian-1',
                'org.mockito:mockito-core:2.20.1'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

// workaround to suppress extra-noisy Javadoc lint and other warnings
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
   	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']
	pkg {
		repo = 'cloudwall-maven'
		name = 'cloudwall-graph'
		userOrg = 'io-cloudwall'
        desc = 'Cloud Wall Graph Algorithms'
        websiteUrl = 'https://github.com/cloudwall/cloudwall-graph'
        issueTrackerUrl = 'https://github.com/cloudwall/cloudwall-graph/issues'
		vcsUrl = 'https://github.com/cloudwall/cloudwall-graph.git'
        licenses = ['Apache-2.0']

        githubRepo = 'cloudwall/cloudwall-graph'
        githubReleaseNotesFile = 'README.md'
        
        version {
            name = project.version
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': "io.cloudwall:cloudwall-graph:$project.version"]
        }
	}
}
